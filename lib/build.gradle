apply plugin: 'java'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

ext.versions = [
        slf4j  : "1.7.2",
        logback: "1.1.3",
        junit  : "4.10"
]
ext.antlr = [
        grammarpackage: "com.oakonell.expression.grammar",
        antlrSource   : 'src/main/antlr',
        destinationDir: "src/main/java"
]

repositories {
    mavenCentral()
}

configurations {
    antlr4 {
        description = "ANTLR4"
    }
}

dependencies {
    compile group: "org.slf4j", name: "slf4j-api", version: versions.slf4j
    compile group: "ch.qos.logback", name: "logback-classic", version: versions.logback
    compile group: "org.antlr", name: "antlr4-runtime", version: "4.5.3"
    antlr4 group: "org.antlr", name: "antlr4", version: "4.5.3"
    testCompile group: "junit", name: "junit", version: versions.junit
}

task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)

    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-visitor", "-package", antlr.grammarpackage, grammars.files].flatten()

}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}


clean {
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    delete "${antlr.destinationDir}/${pkg}"
}